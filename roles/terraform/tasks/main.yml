# roles/terraform/tasks/tf-tasks.yml
# 
# Runs Terraform from Ansible

- name: Decrypt tfvars
  command: ansible-vault decrypt ./tf/secrets.tfvars
  args:
    chdir: "{{ playbook_dir }}"

- name: Init Terraform
  shell: |
    terraform init
  args:
    chdir: "{{ playbook_dir }}/tf"
  when: (operation == "init")
  register: init

- name: "Display output: Init Terraform"
  debug:
    msg: "{{ init }}"
  when: (operation == "init")

- name: Create resources - Plan
  shell: |
    terraform plan -var-file=secrets.tfvars -out=clicserv.tfplan
  args:
    chdir: "{{ playbook_dir }}/tf"
  when: (operation == "plan")
  register: create_plan

- name: "Display output: Create resources - Plan"
  debug:
    msg: "{{ create_plan.stdout }}"
  when: (operation == "plan")

- name: Create Resources
  shell: |
    terraform apply clicserv.tfplan
  args:
    chdir: "{{ playbook_dir }}/tf"
  when: (operation == "create")
  register: create

- name: "Display output: Create resources"
  debug:
    msg: "{{ create.stdout }}"
  when: (operation == "create")

- name: Assign new Linode IP to a variable
  shell: |
    terraform output -raw linode_ip
  args:
    chdir: "{{ playbook_dir }}/tf"
  when: (operation == "create")
  register: new_linode_ip

- name: Show the new Linode IP
  debug:
    msg: "The IP of the new Linode is: {{ new_linode_ip.stdout }}"
  when: 
    - (operation == "create")
    - new_linode_ip

- name: Create hosts file with that IP
  shell: |
    echo "{{ new_linode_ip.stdout }}" > hosts

    echo "linode_clic_ip: {{ new_linode_ip.stdout }}" > new_ip.yml
  args:
    chdir: "{{ playbook_dir }}"
  when:
    - (operation == "create")
    - new_linode_ip

- name: Create Dynamic Inventory of New Host
  ansible.builtin.add_host:
    name: "{{ new_linode_ip.stdout }}"
    groups: newhost
  when: (operation == "create")

- name: Create ACME cert files and move them to home dir
  shell: |
    terraform output -raw cert_private_key_pem > acme_key.pem

    terraform output -raw cert_full_chain > acme_chain.pem

    mv acme_key.pem {{ playbook_dir }}/

    mv acme_chain.pem {{ playbook_dir }}/
  args:
    chdir: "{{ playbook_dir }}/tf"
  when: (operation == "create")
  register: make_n_move

- name: Confirm certs ready
  debug:
    msg: "Certs are ready"
  when:
    - (operation == "create")
    - make_n_move

- name: Encrypt tfvars
  command: ansible-vault encrypt ./tf/secrets.tfvars
  args:
    chdir: "{{ playbook_dir }}"

